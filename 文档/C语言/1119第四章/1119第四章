1119
扩展
    
    学其他语言的方法
    1:如何计算
    2:输入输出
    3:流程控制

        第四章
            函数 (事实上 与数学中的函数 是相通的)
                main 的特殊地方在于 它是进程的入口函数


                递归: 
                   1: 边界处理
                   2: 处理过程和递归过程  (赋予语义信息)
                   3：返回

                   例: 实现 n 的阶乘  
                       f(n) = {   //语义信息      //边界处理 
                                  n * f(n - 1)   (n > 1)
                                  1              (n == 1)
                               }
                   头递归和尾递归的主要区别 : 返回结果不一样


                函数指针：
                    程序的代码段 也是数据
                    函数指针变量定义： 函数声明是 int func(int); 则函数指针变量为: int (*func)(int);
                    函数指针的应用:  typedef int(*func)(int);   func f1; func f2; 等同于 typedef int(*f1)(int)  typedef int(*f2)(int)


                变参函数:
                    int max_int(int , ...);  
                    stdarg.h
                        获得a后参数列表                 va_list
                        定位a后的第一个参数位置          va_start(a)
                        获取下一个参数列表中的参数        va_arg(int//其他)    传进类型变量  代表读取下一个类型为 int 的变量，这样，可以告诉机器读取多大字节的数据 va_arg其实是个宏
                                #define haizei_arg(p, T) ({
                                    char *temp1 = (char *)(p);
                                    T *temp2 = (T *)(p);
                                    temp1 += sizeof(T);
                                    p = (temp1);
                                    *temp2;
                                  })
                        结束获取参数列表操作             va_end
                        int max_int(int num,...)
                        {
                          va_list arg;
                          va_start(arg, num);
                          int ans = -1;
                          while(num--)
                          {
                            int temp = va_arg(arg,int); //  
                            if(temp > ans) ans = temp;
                          }
                          va_end(arg);
                          return ans;
                        }

                        int main()
                        { 
                          
                           
                           printf("%d\n",max_int(2,1,2));    
                           printf("%d\n",max_int(3,1,3,6));    
                           printf("%d\n",max_int(2,1,4,5));    
                          return 0;
                        }
